import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import fs from "fs";
import path from "path";

const banner =
`/*
 * Obsyncth - Seamless Obsidian-Syncthing Integration
 * Copyright (c) 2024-2025 Reza Mir
 * 
 * This is a generated/bundled file by esbuild
 * Source code: https://github.com/muxammadreza/Obsyncth
 */
`;

const prod = (process.argv[2] === "production");

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["src/main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins],
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: "main.js",
});

// Copy styles.css from src to root for BRAT compatibility
const copyStyles = () => {
	const srcPath = path.join(process.cwd(), 'src', 'styles.css');
	const destPath = path.join(process.cwd(), 'styles.css');
	
	if (fs.existsSync(srcPath)) {
		fs.copyFileSync(srcPath, destPath);
		console.log('✅ Copied styles.css to root directory');
	} else {
		console.log('⚠️ styles.css not found in src/, creating empty file');
		fs.writeFileSync(destPath, '/* No styles defined */');
	}
};

if (prod) {
	await context.rebuild();
	copyStyles();
	process.exit(0);
} else {
	await context.watch();
	copyStyles();
}