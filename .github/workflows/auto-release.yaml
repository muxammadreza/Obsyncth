name: Auto Release on Main Push

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'docs/**'

jobs:
  check-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Check if version changed
        id: version-check
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          
          # Get the latest tag
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          LATEST_VERSION=${LATEST_TAG#v}
          
          echo "current-version=${CURRENT_VERSION}" >> $GITHUB_OUTPUT
          echo "latest-version=${LATEST_VERSION}" >> $GITHUB_OUTPUT
          
          if [ "$CURRENT_VERSION" != "$LATEST_VERSION" ]; then
            echo "version-changed=true" >> $GITHUB_OUTPUT
            echo "🆕 Version changed from ${LATEST_VERSION} to ${CURRENT_VERSION}"
          else
            echo "version-changed=false" >> $GITHUB_OUTPUT
            echo "ℹ️ Version unchanged: ${CURRENT_VERSION}"
          fi

      - name: Install dependencies
        if: steps.version-check.outputs.version-changed == 'true'
        run: npm ci

      - name: Build plugin
        if: steps.version-check.outputs.version-changed == 'true'
        run: npm run build:ci

      - name: Validate build artifacts
        if: steps.version-check.outputs.version-changed == 'true'
        run: |
          if [ ! -f "main.js" ]; then
            echo "❌ Build failed: main.js not found"
            exit 1
          fi
          if [ ! -f "manifest.json" ]; then
            echo "❌ Build failed: manifest.json not found"
            exit 1
          fi
          if [ ! -f "styles.css" ]; then
            echo "ℹ️ styles.css not found, creating empty file"
            touch styles.css
          fi
          echo "✅ Build artifacts validated successfully"

      - name: Create Release
        if: steps.version-check.outputs.version-changed == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ steps.version-check.outputs.current-version }}"
          name: "v${{ steps.version-check.outputs.current-version }}"
          body: |
            🚀 **Obsyncth v${{ steps.version-check.outputs.current-version }}**
            
            Auto-release triggered by push to main branch.
            
            **Installation Methods:**
            
            **📦 Manual Installation:**
            1. Download `main.js`, `manifest.json`, and `styles.css`
            2. Create folder `VaultFolder/.obsidian/plugins/obsyncth/`
            3. Place the downloaded files in this folder
            4. Reload Obsidian and enable the plugin
            
            **🧪 BRAT Installation (Recommended):**
            1. Install the BRAT plugin in Obsidian
            2. Add this repository: `muxammadreza/Obsyncth`
            3. Enable the plugin in your settings
            
            **📱 Cross-Platform Support:**
            - ✅ Windows, macOS, Linux (automatic Syncthing management)
            - ✅ Mobile (iOS/Android) via remote Syncthing instances
            - 🐳 Docker support included
            
            For more information, visit the [GitHub repository](https://github.com/muxammadreza/Obsyncth).
          files: |
            main.js
            manifest.json
            styles.css
          draft: false
          prerelease: false

      - name: Release summary
        if: steps.version-check.outputs.version-changed == 'true'
        run: |
          echo "🎉 Successfully released v${{ steps.version-check.outputs.current-version }}"
          echo "📦 BRAT-compatible assets uploaded: main.js, manifest.json, styles.css"
          echo "🔗 Release URL: https://github.com/${{ github.repository }}/releases/tag/v${{ steps.version-check.outputs.current-version }}"

      - name: No release needed
        if: steps.version-check.outputs.version-changed == 'false'
        run: |
          echo "ℹ️ No version change detected. Skipping release."
          echo "Current version: ${{ steps.version-check.outputs.current-version }}"
